# Framework FastAPI —
#   это современный (2018 года) фреймворк для создания веб-приложений на языке Python.
#   Он был создан с учетом последних тенденций веб-разработки и имеет ряд преимуществ
#   перед другими фреймворками.
# FastAPI более быстрый благодаря использованию асинхронных функций, более безопасный
#   благодаря встроенной валидации данных и поддержке OpenAPI, а также более простой в
#   использовании благодаря интуитивно понятному синтаксису.
#
# Установка FastAPI
# Первым шагом является установка FastAPI.
# pip install fastapi
#
# Отдельно необходимо установить ASGI сервер для запуска приложения.
# Один из вариантов — установка uvicorn https://www.uvicorn.org/
# pip install "uvicorn[standard]"
#
# Для запуска приложения необходимо использовать сервер для запуска приложений uvicorn.
# Для этого открываем терминал ОС, переходим в каталог с проектом и выполняем следующую команду:
# uvicorn main:app --reload
#
# например:
# uvicorn Lection05.main_01-hello_world:app --reload
# Эта команда запустит сервер на локальном хосте по адресу http://127.0.0.1:8000/.
"""
from fastapi import FastAPI
app = FastAPI()

@app.get('/')
async def root():
    return {'message': 'Hello, World!'}  # JSON объект

# В этом примере мы создали объект FastAPI и определили конечную точку API
#   с помощью декоратора @app.get("/").
# Декоратор указывает, что это обработчик GET-запроса по пути "/".
# Внутри функции мы возвращаем словарь с сообщением "Hello World".
# Это сообщение будет отправлено в ответ на запрос.
"""
# Чтобы проверить работоспособность приложения,
#   откройте браузер и перейдите по адресу http://127.0.0.1:8000/.
# Вы должны увидеть сообщение "Hello World".
"""

"""
# Чтобы проверить работу второй функции, перейдите по адресу
# http://127.0.0.1:8000/items/5?q=test,
#   где 5 — это значение переменной item_id, а test — значение параметра q.
#   Вы должны увидеть словарь с переданными параметрами.
