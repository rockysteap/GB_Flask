# –û–ø–µ—Ä–∞—Ü–∏–∏ CRUD ‚Äî
#   —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –ª—é–±–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, —É–ø—Ä–∞–≤–ª—è–µ–º–æ–º –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
#   –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, —á—Ç–µ–Ω–∏—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
#   –í FastAPI —Å SQLAlchemy ORM –º—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã Python.
#   ‚óè CREATE, –°–æ–∑–¥–∞—Ç—å: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
#   ‚óè READ, –ü—Ä–æ—á–∏—Ç–∞—Ç—å: –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
#   ‚óè UPDATE, –û–±–Ω–æ–≤–∏—Ç—å: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
#   ‚óè DELETE, –£–¥–∞–ª–∏—Ç—å: —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
#
# –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ –æ–ø–µ—Ä–∞—Ü–∏—è—Ö CRUD —Å SQLAlchemy ORM
#   –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
#   –ú—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ –Ω–∞—à–µ–º—É –≤—ã–±–æ—Ä—É,
#   —Ç–∞–∫—É—é –∫–∞–∫ MySQL, PostgreSQL –∏–ª–∏ SQLite.
#
import databases
import sqlalchemy
from fastapi import FastAPI
from pydantic import BaseModel, Field
from uvicorn import run as uvi_run

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ –ë–î –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
DATABASE_URL = "sqlite:///mydatabase.db"

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥—É–ª—è database –∏ —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—à—É –±–∞–∑—É
database = databases.Database(DATABASE_URL)

# –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –û–†–ú (–æ–±—ä–µ–∫—Ç–Ω–æ-—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏) sqlalchemy
metadata = sqlalchemy.MetaData()

# –§–æ—Ä–º–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å(—Ç–∞–±–ª–∏—Ü—É) –¥–ª—è –ë–î
users = sqlalchemy.Table(
    "users", metadata,
    sqlalchemy.Column("id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("name", sqlalchemy.String(32)),
    sqlalchemy.Column("email", sqlalchemy.String(128)),
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–≤–∏–∂–æ–∫ –ë–î
engine = sqlalchemy.create_engine(DATABASE_URL, connect_args={"check_same_thread": False})

# –ü–µ—Ä–µ–¥–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –ë–î
metadata.create_all(engine)

app = FastAPI()


#
# üí° –í–Ω–∏–º–∞–Ω–∏–µ!
# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é SQLite —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –Ω–∏–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–º—É –ø–æ—Ç–æ–∫—É,
#   –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ –∫–∞–∂–¥—ã–π –ø–æ—Ç–æ–∫ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∑–∞–ø—Ä–æ—Å.
#   –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏
#   —Ç–æ–≥–æ –∂–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≤–µ—â–µ–π (–¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤).
#   –ù–æ –≤ FastAPI –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –æ–±—ã—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π (def) –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤
#   –º–æ–≥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –∑–∞–ø—Ä–æ—Å–∞,
#   –ø–æ—ç—Ç–æ–º—É –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–æ–±—â–∏—Ç—å SQLite, —á—Ç–æ –æ–Ω –¥–æ–ª–∂–µ–Ω —Ä–∞–∑—Ä–µ—à–∞—Ç—å —ç—Ç–æ —Å –ø–æ–º–æ—â—å—é
#   connect_args={"check_same_thread": False}.
#
# –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–∞–±–ª–∏—Ü–µ–π –≤ –ë–î.
#
# –°–æ–∑–¥–∞–¥–∏–º –¥–≤–µ –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö Pydantic:
#
class UserIn(BaseModel):
    name: str = Field(max_length=32)
    email: str = Field(max_length=128)


class User(BaseModel):
    id: int
    name: str = Field(max_length=32)
    email: str = Field(max_length=128)


# –ü–µ—Ä–≤–∞—è –º–æ–¥–µ–ª—å –Ω—É–∂–Ω–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞.
# –ê –≤—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –ë–î –∫–ª–∏–µ–Ω—Ç—É.
#
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
# –ü—Ä–µ–∂–¥–µ —á–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º API –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤—Å—é —Ü–µ–ø–æ—á–∫—É CRUD
#   –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
#
@app.get("/fake_users/{count}")
async def create_note(count: int):
    for i in range(count):
        query = users.insert().values(name=f'user{i}', email=f'mail{i}@mail.ru')
        await database.execute(query)
    return {'message': f'{count} fake users create'}


#
# –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ count –∏ —Å–æ–∑–¥–∞—ë–º –≤ –ë–î —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–º–µ–Ω–∞–º–∏ –∏ –ø–æ—á—Ç–∞–º–∏.
# –¢–µ–ø–µ—Ä—å –º—ã –≥–æ—Ç–æ–≤—ã –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å CRUD, –Ω–æ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.
#
# üî• –í–∞–∂–Ω–æ!
# –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ –∞–¥—Ä–µ—Å—É http://127.0.0.1:8000/fake_users/25, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
#
# üí° –í–Ω–∏–º–∞–Ω–∏–µ!
# –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø–æ–¥–æ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≤ –ø—Ä–æ–¥–∞–∫—à–Ω.


if __name__ == '__main__':
    uvi_run('5-CRUD-in-db:app', host='127.0.0.1', port=8000, reload=True)
